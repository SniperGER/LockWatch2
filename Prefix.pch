//
// Prefix.pch
// LockWatch2
//
// Created by janikschmidt on 7/6/2020
// Copyright Â© 2020 Team FESTIVAL. All rights reserved
//

#define __VERSION "2.0-1"

#define DPKG_PATH "/var/lib/dpkg/info/ml.festival.lockwatch2.list"

#if TARGET_OS_SIMULATOR
#define LIBRARY_PATH @"/opt/simject/Preferences/ml.festival.lockwatch2.CurrentFaces.plist"
#define LOCALIZABLE_BUNDLE_PATH @"/opt/simject/Application Support/LockWatch2"
#define PREFERENCES_PATH @"/opt/simject/Preferences/ml.festival.lockwatch2.plist"
#define THIRD_PARTY_FACES_PATH @"/opt/simject/Application Support/LockWatch2/Faces"
#define WATCH_DATA_PATH @"/opt/simject/Application Support/LockWatch2/EmulatedDevices.plist"
#else
#define LIBRARY_PATH @"/var/mobile/Library/Preferences/ml.festival.lockwatch2.CurrentFaces.plist"
#define LOCALIZABLE_BUNDLE_PATH @"/Library/Application Support/LockWatch2"
#define PREFERENCES_PATH @"/var/mobile/Library/Preferences/ml.festival.lockwatch2.plist"
#define THIRD_PARTY_FACES_PATH @"/Library/Application Support/LockWatch2/Faces"
#define WATCH_DATA_PATH @"/Library/Application Support/LockWatch2/EmulatedDevices.plist"
#endif

#define CLAMP(value, min, max) (value - min) / (max - min)
#define LERP(a, b, value) a + (b - a) * value



extern BOOL UIColorIsLightColor(UIColor* color);



@class CSMainPageContentViewController, SBApplication, SBDashBoardIdleTimerController, SBFLockScreenDateViewController;

@interface CSCoverSheetViewController : UIViewController
- (SBFLockScreenDateViewController*)dateViewController;
- (SBDashBoardIdleTimerController*)idleTimerController;
- (CSMainPageContentViewController*)mainPageContentViewController;
- (UIWindow*)_window;
@end

@interface FBSOpenApplicationOptions : NSObject
+ (id)optionsWithDictionary:(id)arg1;
@end

@interface FBSOpenApplicationService : NSObject
+ (instancetype)serviceWithDefaultShellEndpoint;
- (void)openApplication:(id)arg1 withOptions:(id)arg2 completion:(id /* block */)arg4;
@end

@interface NSDistributedNotificationCenter : NSNotificationCenter
@end

@interface SBApplicationController : NSObject
+ (id)sharedInstance;
- (id)applicationWithBundleIdentifier:(id)arg1;
@end

@interface SBLockScreenManager : NSObject
+ (instancetype)sharedInstance;
- (CSCoverSheetViewController*)coverSheetViewController;
- (BOOL)unlockWithRequest:(id)arg1 completion:(id /* block */)arg2;
@end

@interface SBLockScreenUnlockRequest : NSObject
@property(nonatomic) BOOL forceAlertAuthenticationUI;
@property(nonatomic) BOOL wantsBiometricPresentation;
@property(retain, nonatomic) SBApplication *destinationApplication;
@property(nonatomic) int intent;
@property(nonatomic) int source;
@property(copy, nonatomic) NSString *name;
@end

@interface SBDashBoardIdleTimerController : NSObject
- (void)resetIdleTimerIfTopMost;
- (void)addIdleTimerDisabledAssertionReason:(id)arg1;
- (void)removeIdleTimerDisabledAssertionReason:(id)arg1;
@end

@interface SBUserAgent : NSObject
- (BOOL)deviceIsPasscodeLocked;
@end

@interface SpringBoard : UIApplication
- (SBUserAgent*)pluginUserAgent;
@end

@interface _UILegibilitySettings : NSObject
- (UIColor*)primaryColor;
@end

